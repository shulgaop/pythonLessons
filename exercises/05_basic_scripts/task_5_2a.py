# -*- coding: utf-8 -*-
"""
Задание 5.2a

Всё, как в задании 5.2, но, если пользователь ввел адрес хоста, а не адрес сети,
надо преобразовать адрес хоста в адрес сети и вывести адрес сети и маску, как в задании 5.2.

Пример адреса сети (все биты хостовой части равны нулю):
* 10.0.1.0/24
* 190.1.0.0/16

Пример адреса хоста:
* 10.0.1.1/24 - хост из сети 10.0.1.0/24
* 10.0.5.195/28 - хост из сети 10.0.5.192/28

Если пользователь ввел адрес 10.0.1.1/24,
вывод должен быть таким:

Network:
10        0         1         0
00001010  00000000  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях хост/маска, например:
    10.0.5.195/28, 10.0.1.1/24

Подсказка:
Есть адрес хоста в двоичном формате и маска сети 28. Адрес сети это первые 28 бит адреса хоста + 4 ноля.
То есть, например, адрес хоста 10.1.1.195/28  в двоичном формате будет
bin_ip = "00001010000000010000000111000011"

А адрес сети будет первых 28 символов из bin_ip + 0000 (4 потому что всего в адресе может быть 32 бита, а 32 - 28 = 4)
00001010000000010000000111000000

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""
net = input('введите сеть в формате ххх.ххх.ххх.ххх/уу:')
x=net.split('/') # РАДЕЛЯЕМ  на 2 части по границе /
ip=x[0] # первая половина ,будет ip
mask=x[1]# вторая половина , будет Маска

oct1, oct2, oct3, oct4 = ip.split('.') # прирвыниваем ip, разделенный по точке, к списку строк
z='1'*int(mask)+'0'*(32-int(mask)) # Выражаем маску, как битовую последовательность, тоесть 24 единицы и 32-24 нуля

m=int(f'''{int(oct1):08b}{int(oct2):08b}{int(oct3):08b}{int(oct4):08b}''',2)&int(f'''{z[0:8]:<8}{z[8:16]:<8}{z[16:24]:<8}{z[24:32]:<8}''',2)
m=bin(m)
m=m.replace('0b','0000')

print (f'''
Network:
{int(m[0:8],2):<8} {int(m[8:16],2):<8} {int(m[16:24],2):<8} {int(m[24:32],2):<8}
{m[0:8]:<8} {m[8:16]:<8} {m[16:24]:<8} {m[24:32]:<8}
Mask:
/{mask}
{int(z[0:8], 2):<8} {int(z[8:16], 2):<8} {int(z[16:24], 2):<8} {int(z[24:32], 2):<8}
{z[0:8]:<8} {z[8:16]:<8} {z[16:24]:<8} {z[24:32]:<8}
''')